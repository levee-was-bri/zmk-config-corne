/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        HMRF: HMRF {
            compatible = "zmk,behavior-hold-tap";
            label = "HMRF";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            quick-tap-ms = <150>;
        };

        HMRS: HMRS {
            compatible = "zmk,behavior-hold-tap";
            label = "HMRS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            quick-tap-ms = <150>;
        };

        LHKPT: LHKPT {
            compatible = "zmk,behavior-hold-tap";
            label = "LHKPT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
        };
    };

    combos {
        compatible = "zmk,combos";

        enter_combo {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };

        function_layer {
            bindings = <&tog 3>;
            key-positions = <36 41 38 39>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <33 32>;
        };

        soft_off {
            bindings = <&soft_off>;
            key-positions = <2 26>;
            layers = <2>;
        };
    };

    macros {
        moonlight_mouse: moonlight_mouse {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(LS(M)))>;
            label = "MOONLIGHT_MOUSE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E           &kp R                      &kp T                         &kp Y           &kp U               &kp I                   &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D           &kp F                      &kp G                         &kp H           &kp J               &kp K                   &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C           &kp V                      &kp B                         &kp N           &kp M               &kp COMMA               &kp DOT  &kp FSLH  &none
                     &LHKPT 2 ENTER  &HMRS LEFT_CONTROL ESCAPE  &HMRS LEFT_SHIFT BACKSPACE    &LHKPT 1 SPACE  &HMRS LEFT_GUI TAB  &HMRS RIGHT_ALT DELETE
            >;
        };

        Number {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp NUMBER_1      &kp NUMBER_2       &kp NUMBER_3   &kp NUMBER_4          &kp N5                   &kp NUMBER_6  &kp N7         &kp N8       &kp N9     &kp N0     &none
&none  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp LEFT      &kp DOWN       &kp UP       &kp RIGHT  &kp SQT    &none
&none  &kp GRAVE         &kp MINUS          &kp EQUAL      &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp HOME      &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp MINUS  &none
                                            &trans         &trans                &trans                   &trans        &trans         &trans
            >;
        };

        function {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp F1   &kp F2   &kp F3  &kp F4        &kp F5    &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &none
&none  &kp F11  &kp F12  &none   &kp C_VOL_UP  &none     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none    &none    &none   &kp C_VOL_DN  &none     &none         &none         &none         &out OUT_TOG  &bt BT_CLR    &none
                         &trans  &trans        &trans    &trans        &trans        &trans
            >;
        };

        gaming {
            bindings = <
&none  &kp ESCAPE  &kp Q   &kp W  &kp E             &kp R             &trans  &trans            &trans  &trans  &trans  &none
&none  &kp SPACE   &kp A   &kp S  &kp D             &kp G             &trans  &trans            &trans  &trans  &trans  &none
&none  &kp V       &trans  &kp I  &trans            &trans            &trans  &moonlight_mouse  &trans  &trans  &trans  &none
                           &kp F  &kp LEFT_CONTROL  &kp LEFT_SHIFT    &trans  &trans            &trans
            >;
        };
    };
};
